name: Build Windows single-file EXE

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: '1'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        rid: [win-x64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Show dotnet info
        run: dotnet --info

      - name: Restore dependencies (with runtime)
        # restore with --runtime to ensure project.assets.json contains net8.0-windows/<rid> entries
        run: dotnet restore VideoDownloader/VideoDownloader.csproj --runtime ${{ matrix.rid }}

      - name: Build
        run: dotnet build VideoDownloader/VideoDownloader.csproj -c Release -r ${{ matrix.rid }} --no-restore

      - name: Publish single-file self-contained EXE
        run: |
          dotnet publish VideoDownloader/VideoDownloader.csproj \
            -c Release \
            -r ${{ matrix.rid }} \
            --self-contained true \
            -p:PublishSingleFile=true \
            -p:PublishTrimmed=false \
            -p:PublishReadyToRun=true \
            -o ${{ runner.workspace }}/artifacts

      - name: Download yt-dlp (optional helper)
        run: |
          setlocal enabledelayedexpansion
          curl -L -f -o "${{ runner.workspace }}/artifacts/yt-dlp.exe" \
            https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe || echo "yt-dlp download failed (non-fatal)"
          endlocal

      - name: List artifacts
        run: dir ${{ runner.workspace }}/artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: VideoDownloader-windows-x64
          path: ${{ runner.workspace }}/artifacts
